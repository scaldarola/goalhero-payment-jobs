name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Verify dependencies
      run: go mod verify
      
    - name: Run go vet
      run: go vet ./...
      
    - name: Run tests
      run: go test -v ./...
      env:
        GO_ENV: test
        
    - name: Run tests with race detection
      run: go test -race -short ./...
      env:
        GO_ENV: test
        
    - name: Check test coverage
      run: |
        go test -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html
        go tool cover -func=coverage.out
      env:
        GO_ENV: test
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Build application
      run: go build -v ./...
      
    - name: Build for different platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o goalhero-payment-jobs-linux-amd64
        GOOS=darwin GOARCH=amd64 go build -o goalhero-payment-jobs-darwin-amd64
        GOOS=windows GOARCH=amd64 go build -o goalhero-payment-jobs-windows-amd64.exe
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          goalhero-payment-jobs-*

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './...'
        
  # Notification job that runs after all other jobs
  notify:
    name: Slack Notifications
    runs-on: ubuntu-latest
    needs: [test, build, lint, security]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify Slack on Success
      if: ${{ needs.test.result == 'success' && needs.build.result == 'success' && needs.lint.result == 'success' && needs.security.result == 'success' }}
      uses: 8398a7/action-slack@v3
      with:
        status: success
        channel: '#deployments'
        text: |
          :white_check_mark: *GoalHero Payment Jobs - All Checks Passed*
          
          *Branch:* `${{ github.ref_name }}`
          *Commit:* `${{ github.sha }}`
          *Author:* ${{ github.actor }}
          
          :test_tube: Tests: Passed
          :hammer: Build: Passed
          :mag: Lint: Passed  
          :shield: Security: Passed
          
          Application is ready! :rocket:
          
          <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify Slack on Any Failure
      if: ${{ needs.test.result == 'failure' || needs.build.result == 'failure' || needs.lint.result == 'failure' || needs.security.result == 'failure' }}
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#alerts'
        text: |
          :x: *GoalHero Payment Jobs - Pipeline Failed*
          
          *Branch:* `${{ github.ref_name }}`
          *Commit:* `${{ github.sha }}`
          *Author:* ${{ github.actor }}
          
          :test_tube: Tests: ${{ needs.test.result }}
          :hammer: Build: ${{ needs.build.result }}
          :mag: Lint: ${{ needs.lint.result }}
          :shield: Security: ${{ needs.security.result }}
          
          **Action required!** Check the failed steps.
          
          <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Failed Pipeline>
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}